"""
@file: local_server.py
@description: –õ–æ–∫–∞–ª—å–Ω—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ Quartz —Å–∞–π—Ç–∞
@dependencies: quartz, http.server
@created: 2024-12-19
"""

import os
import time
import threading
import subprocess
import signal
from pathlib import Path
from typing import Optional, Dict, Any
from http.server import HTTPServer, SimpleHTTPRequestHandler
import socketserver

from quartz import run_quartz_build


class QuartzHTTPRequestHandler(SimpleHTTPRequestHandler):
    """–ö–∞—Å—Ç–æ–º–Ω—ã–π HTTP –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Quartz —Å–∞–π—Ç–∞"""
    
    def __init__(self, *args, quartz_path: str = None, **kwargs):
        self.quartz_path = Path(quartz_path) if quartz_path else None
        super().__init__(*args, **kwargs)
    
    def end_headers(self):
        """–î–æ–±–∞–≤–ª—è–µ—Ç CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"""
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        super().end_headers()
    
    def do_OPTIONS(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ preflight CORS –∑–∞–ø—Ä–æ—Å–æ–≤"""
        self.send_response(200)
        self.end_headers()
    
    def translate_path(self, path):
        """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç URL –ø—É—Ç—å –≤ —Ñ–∞–π–ª–æ–≤—ã–π –ø—É—Ç—å"""
        if not self.quartz_path:
            return super().translate_path(path)
        
        # –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –∫–æ—Ä–µ–Ω—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º index.html
        if path == '/':
            path = '/index.html'
        
        # –ò—â–µ–º —Ñ–∞–π–ª –≤ –ø–∞–ø–∫–µ public Quartz
        public_path = self.quartz_path / 'public' / path.lstrip('/')
        
        if public_path.exists():
            return str(public_path)
        
        # Fallback –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –ø–æ–≤–µ–¥–µ–Ω–∏—é
        return super().translate_path(path)


class LocalQuartzServer:
    """–õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ Quartz —Å–∞–π—Ç–∞"""
    
    def __init__(self, quartz_path: str, port: int = 1313):
        self.quartz_path = Path(quartz_path)
        self.port = port
        self.server: Optional[HTTPServer] = None
        self.server_thread: Optional[threading.Thread] = None
        self.is_running = False
        self.process: Optional[subprocess.Popen] = None
        
    def start(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä"""
        if self.is_running:
            return
            
        try:
            # –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–∏—Ä–∞–µ–º —Å–∞–π—Ç
            self._build_site()
            
            # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ npm (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
            if self._try_npm_start():
                self.is_running = True
                return
            
            # Fallback –∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º—É HTTP —Å–µ—Ä–≤–µ—Ä—É
            self._start_http_server()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
            raise
    
    def _build_site(self):
        """–°–æ–±–∏—Ä–∞–µ—Ç Quartz —Å–∞–π—Ç"""
        try:
            print("üî® –°–±–æ—Ä–∫–∞ Quartz —Å–∞–π—Ç–∞...")
            run_quartz_build(str(self.quartz_path))
            print("‚úÖ –°–∞–π—Ç —Å–æ–±—Ä–∞–Ω")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
    
    def _try_npm_start(self) -> bool:
        """–ü—ã—Ç–∞–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ npm start"""
        try:
            package_json = self.quartz_path / 'package.json'
            if not package_json.exists():
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ start
            import json
            with open(package_json, 'r', encoding='utf-8') as f:
                package_data = json.load(f)
            
            if 'scripts' not in package_data or 'start' not in package_data['scripts']:
                return False
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º npm start
            print("üöÄ –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ npm start...")
            self.process = subprocess.Popen(
                ['npm', 'start'],
                cwd=str(self.quartz_path),
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True
            )
            
            # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
            time.sleep(3)
            
            if self.process.poll() is None:
                print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ npm –Ω–∞ –ø–æ—Ä—Ç—É {self.port}")
                return True
            else:
                print("‚ö†Ô∏è npm start –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π")
                return False
                
        except Exception as e:
            print(f"‚ö†Ô∏è npm start –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
            return False
    
    def _start_http_server(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π HTTP —Å–µ—Ä–≤–µ—Ä"""
        try:
            print("üåê –ó–∞–ø—É—Å–∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ HTTP —Å–µ—Ä–≤–µ—Ä–∞...")
            
            # –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            handler = type('QuartzHandler', (QuartzHTTPRequestHandler,), {
                'quartz_path': str(self.quartz_path)
            })
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            self.server = HTTPServer(('localhost', self.port), handler)
            self.server_thread = threading.Thread(target=self.server.serve_forever, daemon=True)
            self.server_thread.start()
            
            self.is_running = True
            print(f"‚úÖ HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:{self.port}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ HTTP —Å–µ—Ä–≤–µ—Ä–∞: {e}")
            raise
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä"""
        if not self.is_running:
            return
            
        try:
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º npm –ø—Ä–æ—Ü–µ—Å—Å
            if self.process:
                self.process.terminate()
                self.process.wait(timeout=5)
                self.process = None
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä
            if self.server:
                self.server.shutdown()
                self.server.server_close()
                self.server = None
            
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞
            if self.server_thread and self.server_thread.is_alive():
                self.server_thread.join(timeout=5)
            
            self.is_running = False
            print("‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    
    def restart(self):
        """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä"""
        self.stop()
        time.sleep(1)
        self.start()
    
    def get_status(self) -> Dict[str, Any]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"""
        return {
            'is_running': self.is_running,
            'port': self.port,
            'quartz_path': str(self.quartz_path),
            'has_npm': self.process is not None,
            'has_http': self.server is not None
        }
    
    def __enter__(self):
        """–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä"""
        return self
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ"""
        self.stop()


def create_local_server(quartz_path: str, port: int = 1313) -> LocalQuartzServer:
    """–§–∞–±—Ä–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
    return LocalQuartzServer(quartz_path, port)
